name: Docker Image CI
on:
  push:
    branches:
      - dev
      - master
env:
  IMAGE_NAME: centos-7-perl
jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Print greeting
        env:
          TARGET: world
        run: |
          echo "Hello, $TARGET!"
      - name: Build the Docker image
        #run: docker build . --file Dockerfile --tag centos-7-perl:$(date +%s)
        run: docker build . --file Dockerfile
      - name: Create timestamp file
        run: date > timestamp-raw.txt
      - name: Store timestamp artifact
        uses: actions/upload-artifact@v1
        with:
          name: timestamp
          path: timestamp-raw.txt
  push:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v2
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag image
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      - name: Say goodbye
        env:
          TARGET: world
        run: |
          echo "Goodbye, $TARGET!"
